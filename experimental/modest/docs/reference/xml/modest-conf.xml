<refentry id="modest-ModestConf">
<refmeta>
<refentrytitle id="top_of_page">ModestConf</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>MODEST Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>ModestConf</refname>
<refpurpose></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="synopsis">
<title id="synopsis.title">Synopsis</title>

<synopsis>



            <link linkend="ModestConf">ModestConf</link>;
<link linkend="GObject">GObject</link>*    <link linkend="modest-conf-new">modest_conf_new</link>                 (void);
<link linkend="gchar">gchar</link>*      <link linkend="modest-conf-get-string">modest_conf_get_string</link>          (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);
<link linkend="int">int</link>         <link linkend="modest-conf-get-int">modest_conf_get_int</link>             (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>    <link linkend="modest-conf-get-bool">modest_conf_get_bool</link>            (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>    <link linkend="modest-conf-set-string">modest_conf_set_string</link>          (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             const <link linkend="gchar">gchar</link> *val,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>    <link linkend="modest-conf-set-int">modest_conf_set_int</link>             (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="int">int</link> val,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>    <link linkend="modest-conf-set-bool">modest_conf_set_bool</link>            (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="gboolean">gboolean</link> val,
                                             <link linkend="GError">GError</link> **err);
<link linkend="GSList">GSList</link>*     <link linkend="modest-conf-list-subkeys">modest_conf_list_subkeys</link>        (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>    <link linkend="modest-conf-remove-key">modest_conf_remove_key</link>          (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>    <link linkend="modest-conf-key-exists">modest_conf_key_exists</link>          (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);

</synopsis>
</refsynopsisdiv>









<refsect1 id="desc">
<title id="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 id="details">
<title id="details.title">Details</title>
<refsect2>
<title><anchor id="ModestConf" role="struct"/>ModestConf</title>
<indexterm><primary>ModestConf</primary></indexterm><programlisting>typedef struct {
	 GObject parent;
} ModestConf;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="modest-conf-new" role="function"/>modest_conf_new ()</title>
<indexterm><primary>modest_conf_new</primary></indexterm><programlisting><link linkend="GObject">GObject</link>*    modest_conf_new                 (void);</programlisting>
<para>
create a new modest ModestConf object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new ModestConf instance, or NULL in case
of any error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-conf-get-string" role="function"/>modest_conf_get_string ()</title>
<indexterm><primary>modest_conf_get_string</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      modest_conf_get_string          (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
get a string from the configuration system</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> self a ModestConf instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key of the value to retrieve
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL to ignore.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a newly allocated string with the value for the key,
or NULL in case of error. <parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-conf-get-int" role="function"/>modest_conf_get_int ()</title>
<indexterm><primary>modest_conf_get_int</primary></indexterm><programlisting><link linkend="int">int</link>         modest_conf_get_int             (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
get an integer from the configuration system</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> self a ModestConf instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key of the value to retrieve
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL to ignore.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> an integer with the value for the key, or -1 in case of error
(of course, -1 can also be returned in non-error cases).
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-conf-get-bool" role="function"/>modest_conf_get_bool ()</title>
<indexterm><primary>modest_conf_get_bool</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    modest_conf_get_bool            (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
get a boolean value from the configuration system</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> self a ModestConf instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key of the value to retrieve
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL to ignore.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a boolean value with the value for the key, or -1 in case of error
(of course, -1 can also be returned in non-error cases).
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-conf-set-string" role="function"/>modest_conf_set_string ()</title>
<indexterm><primary>modest_conf_set_string</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    modest_conf_set_string          (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             const <link linkend="gchar">gchar</link> *val,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
store a string value in the configuration system</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> a ModestConf instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&nbsp;:</term>
<listitem><simpara> the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL if not interested.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if succeeded or FALSE in case of error.
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-conf-set-int" role="function"/>modest_conf_set_int ()</title>
<indexterm><primary>modest_conf_set_int</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    modest_conf_set_int             (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="int">int</link> val,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
store an integer value in the configuration system</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> a ModestConf instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&nbsp;:</term>
<listitem><simpara> the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL if not interested.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if succeeded or FALSE in case of error.
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-conf-set-bool" role="function"/>modest_conf_set_bool ()</title>
<indexterm><primary>modest_conf_set_bool</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    modest_conf_set_bool            (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="gboolean">gboolean</link> val,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
store a boolean value in the configuration system</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> a ModestConf instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&nbsp;:</term>
<listitem><simpara> the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL if not interested.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if succeeded or FALSE in case of error.
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-conf-list-subkeys" role="function"/>modest_conf_list_subkeys ()</title>
<indexterm><primary>modest_conf_list_subkeys</primary></indexterm><programlisting><link linkend="GSList">GSList</link>*     modest_conf_list_subkeys        (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
list all the subkeys for a given key</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> a ModestConf instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key whose subkeys will be listed
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL if not interested.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a newly allocated list or NULL in case of error
the returned GSList must be freed by the caller
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-conf-remove-key" role="function"/>modest_conf_remove_key ()</title>
<indexterm><primary>modest_conf_remove_key</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    modest_conf_remove_key          (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
attempts to remove <parameter>key</parameter> and all its subkeys</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> a ModestConf instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key to remove
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL if not interested.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if succeeded or FALSE in case of error.
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-conf-key-exists" role="function"/>modest_conf_key_exists ()</title>
<indexterm><primary>modest_conf_key_exists</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    modest_conf_key_exists          (<link linkend="ModestConf">ModestConf</link> *self,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
checks if the given key exists in the configuration system</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> a ModestConf instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key to remove
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL if not interested.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if exists, FALSE otherwise.
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
