<refentry id="modest-ModestAccountMgr">
<refmeta>
<refentrytitle id="top_of_page">ModestAccountMgr</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>MODEST Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>ModestAccountMgr</refname>
<refpurpose></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="synopsis">
<title id="synopsis.title">Synopsis</title>

<synopsis>



            <link linkend="ModestAccountMgr">ModestAccountMgr</link>;
<link linkend="GObject">GObject</link>*    <link linkend="modest-account-mgr-new">modest_account_mgr_new</link>          (<link linkend="ModestConf">ModestConf</link> *modest_conf);
<link linkend="gboolean">gboolean</link>    <link linkend="modest-account-mgr-add-account">modest_account_mgr_add_account</link>  (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>    <link linkend="modest-account-mgr-remove-account">modest_account_mgr_remove_account</link>
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="GError">GError</link> **err);
<link linkend="GSList">GSList</link>*     <link linkend="modest-account-mgr-account-names">modest_account_mgr_account_names</link>
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>    <link linkend="modest-account-mgr-account-exists">modest_account_mgr_account_exists</link>
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gchar">gchar</link>*      <link linkend="modest-account-mgr-get-account-string">modest_account_mgr_get_account_string</link>
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gint">gint</link>        <link linkend="modest-account-mgr-get-account-int">modest_account_mgr_get_account_int</link>
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>    <link linkend="modest-account-mgr-get-account-bool">modest_account_mgr_get_account_bool</link>
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>    <link linkend="modest-account-mgr-set-account-string">modest_account_mgr_set_account_string</link>
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *key,
                                             const <link linkend="gchar">gchar</link> *val,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>    <link linkend="modest-account-mgr-set-account-int">modest_account_mgr_set_account_int</link>
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="gint">gint</link> val,
                                             <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>    <link linkend="modest-account-mgr-set-account-bool">modest_account_mgr_set_account_bool</link>
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="gboolean">gboolean</link> val,
                                             <link linkend="GError">GError</link> **err);

</synopsis>
</refsynopsisdiv>









<refsect1 id="desc">
<title id="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 id="details">
<title id="details.title">Details</title>
<refsect2>
<title><anchor id="ModestAccountMgr" role="struct"/>ModestAccountMgr</title>
<indexterm><primary>ModestAccountMgr</primary></indexterm><programlisting>typedef struct {
	 GObject parent;
	/* insert public members, if any */
} ModestAccountMgr;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="modest-account-mgr-new" role="function"/>modest_account_mgr_new ()</title>
<indexterm><primary>modest_account_mgr_new</primary></indexterm><programlisting><link linkend="GObject">GObject</link>*    modest_account_mgr_new          (<link linkend="ModestConf">ModestConf</link> *modest_conf);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>modest_conf</parameter>&nbsp;:</term>
<listitem><simpara> a ModestConf instance 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new ModestAccountMgr, or NULL in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-account-mgr-add-account" role="function"/>modest_account_mgr_add_account ()</title>
<indexterm><primary>modest_account_mgr_add_account</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    modest_account_mgr_add_account  (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
create a new account. the account with <parameter>name</parameter> should not already exist</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> a ModestAccountMgr instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the account to create
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL to ignore.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if the creation succeeded, FALSE otherwise,
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-account-mgr-remove-account" role="function"/>modest_account_mgr_remove_account ()</title>
<indexterm><primary>modest_account_mgr_remove_account</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    modest_account_mgr_remove_account
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
remove an existing account. the account with <parameter>name</parameter> should already exist</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> a ModestAccountMgr instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the account to remove
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL to ignore.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if the creation succeeded, FALSE otherwise,
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-account-mgr-account-names" role="function"/>modest_account_mgr_account_names ()</title>
<indexterm><primary>modest_account_mgr_account_names</primary></indexterm><programlisting><link linkend="GSList">GSList</link>*     modest_account_mgr_account_names
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
list all account names</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> a ModestAccountMgr instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL to ignore.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a newly allocated list of account names, or NULL in case of error or
if there are no accounts. The caller must free the returned GSList
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-account-mgr-account-exists" role="function"/>modest_account_mgr_account_exists ()</title>
<indexterm><primary>modest_account_mgr_account_exists</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    modest_account_mgr_account_exists
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
check whether account <parameter>name</parameter> exists</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> a ModestAccountMgr instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL to ignore.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if the account exists, FALSE otherwise (or in case of error)
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-account-mgr-get-account-string" role="function"/>modest_account_mgr_get_account_string ()</title>
<indexterm><primary>modest_account_mgr_get_account_string</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      modest_account_mgr_get_account_string
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
get a config string from some account</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> self a ModestAccountMgr instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the account
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key of the value to retrieve
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL to ignore.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a newly allocated string with the value for the key,
or NULL in case of error. <parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-account-mgr-get-account-int" role="function"/>modest_account_mgr_get_account_int ()</title>
<indexterm><primary>modest_account_mgr_get_account_int</primary></indexterm><programlisting><link linkend="gint">gint</link>        modest_account_mgr_get_account_int
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
get a config int from some account</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> self a ModestAccountMgr instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the account
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key of the value to retrieve
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL to ignore.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> an integer with the value for the key, or -1 in case of
error (but of course -1 does not necessarily imply an error)
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-account-mgr-get-account-bool" role="function"/>modest_account_mgr_get_account_bool ()</title>
<indexterm><primary>modest_account_mgr_get_account_bool</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    modest_account_mgr_get_account_bool
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
get a config boolean from some account</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> self a ModestAccountMgr instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the account
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key of the value to retrieve
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL to ignore.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> an boolean with the value for the key, or FALSE in case of
error (but of course FALSE does not necessarily imply an error)
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-account-mgr-set-account-string" role="function"/>modest_account_mgr_set_account_string ()</title>
<indexterm><primary>modest_account_mgr_set_account_string</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    modest_account_mgr_set_account_string
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *key,
                                             const <link linkend="gchar">gchar</link> *val,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
set a config string for some account</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> self a ModestAccountMgr instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the account
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&nbsp;:</term>
<listitem><simpara> the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL to ignore.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if setting the value succeeded, or FALSE in case of error.
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-account-mgr-set-account-int" role="function"/>modest_account_mgr_set_account_int ()</title>
<indexterm><primary>modest_account_mgr_set_account_int</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    modest_account_mgr_set_account_int
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="gint">gint</link> val,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
set a config int for some account</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> self a ModestAccountMgr instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the account
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&nbsp;:</term>
<listitem><simpara> the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL to ignore.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if setting the value succeeded, or FALSE in case of error.
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="modest-account-mgr-set-account-bool" role="function"/>modest_account_mgr_set_account_bool ()</title>
<indexterm><primary>modest_account_mgr_set_account_bool</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    modest_account_mgr_set_account_bool
                                            (<link linkend="ModestAccountMgr">ModestAccountMgr</link> *self,
                                             const <link linkend="gchar">gchar</link> *name,
                                             const <link linkend="gchar">gchar</link> *key,
                                             <link linkend="gboolean">gboolean</link> val,
                                             <link linkend="GError">GError</link> **err);</programlisting>
<para>
set a config bool for some account</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&nbsp;:</term>
<listitem><simpara> self a ModestAccountMgr instance
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the account
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> the key of the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>val</parameter>&nbsp;:</term>
<listitem><simpara> the value to set
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> a GError ptr, or NULL to ignore.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if setting the value succeeded, or FALSE in case of error.
<parameter>err</parameter> gives details in case of error
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
